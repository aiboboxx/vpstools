kind: pipeline
type: docker
name: first
platform:
  os: linux
  arch: amd64
volumes: # 声明数据卷（此为服务器中的实际目录）
  - name: node_modules # 数据卷名称
    host: # Host Volume
      path: /var/tmp/node_modules # 宿主机目录    #绝对路径
steps: # 定义管道的执行步骤
  - name: freeok_invite # 步骤名称
    image: satantime/puppeteer-node:14-bullseye # 当前步骤使用的镜像
    depends_on: [clone] # 依赖的步骤
    volumes: # 挂载数据卷（此为容器内的目录）
      - name: node_modules # 数据卷名称
        path: /drone/src/node_modules # 容器内目录 绝对路径
    commands: # 当前步骤执行的命令
      - export runId=123456
      - pwd # 查看当前目录
      - npm install # 安装node_modules包
      #- ls
      - node freeok_invite.js
      # - npm run build # 执行编译
      # - rm -fr ./blog
    when:
      event:
      - cron
      - promote
      cron:
      - invite

---
kind: pipeline
type: docker
name: second
platform:
  os: linux
  arch: amd64
volumes: # 声明数据卷（此为服务器中的实际目录）
  - name: node_modules # 数据卷名称
    host: # Host Volume
      path: /var/tmp/node_modules # 宿主机目录    #绝对路径
steps: # 定义管道的执行步骤
  - name: deploy # 步骤名称
    image: satantime/puppeteer-node:14-bullseye # 当前步骤使用的镜像
    depends_on: [clone] # 依赖的步骤
    volumes: # 挂载数据卷（此为容器内的目录）
      - name: node_modules # 数据卷名称
        path: /drone/src/node_modules # 容器内目录 绝对路径
    commands: # 当前步骤执行的命令
      - export runId=123456
      - pwd # 查看当前目录
      - npm install # 安装node_modules包
      #- ls
      - node freeok_sign.js
      # - npm run build # 执行编译
      # - rm -fr ./blog
    when:
      event:
      - cron
      - promote
      cron:
      - sign