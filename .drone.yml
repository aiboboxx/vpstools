---
kind: pipeline
type: docker
name: hourly
volumes: # 声明数据卷（此为服务器中的实际目录）
  - name: node_modules # 数据卷名称
    host: # Host Volume
      path: /root/.drone/cfnode/node_modules # 宿主机目录    #绝对路径
  - name: cache   #不可修改，否者无法启动playwright
    host:
      path: /root/.cache
node:
  a: contabo
  c: d
steps: # 定义管道的执行步骤
  - name: deploy # 步骤名称
    image: aiboboxx/node:latest # 当前步骤使用的镜像
    depends_on: [clone] # 依赖的步骤
    volumes: # 挂载数据卷（此为容器内的目录）
      - name: node_modules # 数据卷名称
        path: /drone/src/node_modules # 容器内目录 绝对路径
      - name: cache   #不可修改，否者无法启动playwright
        path: /root/.cache
    commands: # 当前步骤执行的命令
      - export runId=123456
      #- pwd # 查看当前目录
      - npm install # 安装node_modules包
      - npx playwright install  #如果 Executable doesn't exist 
      #- npx playwright install-deps
      - curl -s 4.ipw.cn && echo ""
      - Xvfb -ac :7 -screen 0 1280x1024x8 &
      - export DISPLAY=:7 
      - node getprodomain.js
trigger:
  event:
  - cron
  cron:
  - hourly
---
kind: pipeline
type: docker
name: hourly2
volumes: # 声明数据卷（此为服务器中的实际目录）
  - name: node_modules # 数据卷名称
    host: # Host Volume
      path: /root/.drone/cfnode/node_modules # 宿主机目录    #绝对路径
  - name: cache   #不可修改，否者无法启动playwright
    host:
      path: /root/.cache
node:
  a: contabojp
  c: d
steps: # 定义管道的执行步骤
  - name: deploy # 步骤名称
    image: aiboboxx/node:latest # 当前步骤使用的镜像
    depends_on: [clone] # 依赖的步骤
    volumes: # 挂载数据卷（此为容器内的目录）
      - name: node_modules # 数据卷名称
        path: /drone/src/node_modules # 容器内目录 绝对路径
      - name: cache   #不可修改，否者无法启动playwright
        path: /root/.cache
    commands: # 当前步骤执行的命令
      - export runId=123456
      #- pwd # 查看当前目录
      - npm install # 安装node_modules包
      - npx playwright install  #如果 Executable doesn't exist 
      #- npx playwright install-deps
      - curl -s 4.ipw.cn && echo ""
      - Xvfb -ac :7 -screen 0 1280x1024x8 &
      - export DISPLAY=:7 
      - node getfddomain.js
trigger:
  event:
  - cron
  cron:
  - hourly
---
kind: pipeline
type: docker
name: daily
volumes: # 声明数据卷（此为服务器中的实际目录）
  - name: node_modules # 数据卷名称
    host: # Host Volume
      path: /root/.drone/cfnode/node_modules # 宿主机目录    #绝对路径
  - name: cache   #不可修改，否者无法启动playwright
    host:
      path: /root/.cache
# node:
#     a: ikihost
#     c: d
steps: # 定义管道的执行步骤
  - name: deploy # 步骤名称
    image: aiboboxx/node:latest # 当前步骤使用的镜像
    depends_on: [clone] # 依赖的步骤
    volumes: # 挂载数据卷（此为容器内的目录）
      - name: node_modules # 数据卷名称
        path: /drone/src/node_modules # 容器内目录 绝对路径
      - name: cache   #不可修改，否者无法启动playwright
        path: /root/.cache
    commands: # 当前步骤执行的命令
      - export runId=123456
      #- pwd # 查看当前目录
      - npm install # 安装node_modules包
      - npx playwright install  #如果 Executable doesn't exist 
      #- npx playwright install-deps
      - curl -s 4.ipw.cn && echo ""
      - Xvfb -ac :7 -screen 0 1280x1024x8 &
      - export DISPLAY=:7
      - node ipcheck.js
      - node getfdip.js
      - node getproip.js     
trigger:
  event:
  - cron
  cron:
  - daily
---
kind: pipeline
type: docker
name: threeday
volumes: # 声明数据卷（此为服务器中的实际目录）
  - name: node_modules # 数据卷名称
    host: # Host Volume
      path: /root/.drone/cfnode/node_modules # 宿主机目录    #绝对路径
  - name: cache   #不可修改，否者无法启动playwright
    host:
      path: /root/.cache
# node:
#     a: ikihost
#     c: d
steps: # 定义管道的执行步骤
  - name: deploy # 步骤名称
    image: aiboboxx/node:latest # 当前步骤使用的镜像
    depends_on: [clone] # 依赖的步骤
    volumes: # 挂载数据卷（此为容器内的目录）
      - name: node_modules # 数据卷名称
        path: /drone/src/node_modules # 容器内目录 绝对路径
      - name: cache   #不可修改，否者无法启动playwright
        path: /root/.cache
    commands: # 当前步骤执行的命令
      - export runId=123456
      #- pwd # 查看当前目录
      - npm install # 安装node_modules包
      - npx playwright install  #解决 Executable doesn't exist 
      #- npx playwright install-deps
      - curl -s 4.ipw.cn && echo ""
      - Xvfb -ac :7 -screen 0 1280x1024x8 &
      - export DISPLAY=:7
      #- node getprodomain.js
      - node setpro.js 
      - node setpro2.js    
trigger:
  event:
  - cron
  cron:
  - threeday
